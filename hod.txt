ход проекта:

с чего начать? можно с подключения графической части и отрисовки чего-либо, как советует Виктор, а можно с чтения и валидации. так и сделаем.

читаем с помощью gnl, впишем её в библиотеку.

нужна будет ft_realloc, сделаем же. моя версия отличается от стандартной потому что по-другому никак. пох, должно работать. пока не проверял.

читаем построчно и реаллоцируем каждый раз. была мысль проверять каждую строку на валидность символов, но это какая-то стремная проверка получается из-за того, что там же и все цифры в RGB и все буквы в path к текстуркам. поэтому читаем всё, потом валидируем. файл не большой предполагается.

надо найти начало карты find_map_start. отсюда и вниз - карта, всё что выше - конфиг.

парсить идентификатор конфига (типа "NO" или "F") можно разными способами. например, находить его и выделять память динамически, потом сравнивать. а можно проще, сразу сравнивать со значением. так и сделаем. имена идентификаторов уникальны и не пересекается никак, но хороший тон - сравнивать сначала более длинные имена (NO), потом более короткие(F).

много проверок, функции разрастаются. а хули делать то?..

цвет парсим parse_color, которая читает parse_number, которая типа atoi. и вот в ней сделал дополнительную проверку на digit_count, потому что в случае например 200,,100 g будет 0, а нужна ошибка. будет -1 возвращать, чтобы нули не путались.

и проверка на переполнение при int > INT_MAX в parse_number, который в parse_color. разные варианты есть, но один из самых простых - проверка на количество цифр для R, G и B



